//
// Forms
// -------------------------------------------------- //


// Normalize non-controls
//
// Restyle and baseline non-control form elements.

fieldset {
  padding: 0;
  margin: 0;
  border: 0;
  // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
  // so we reset that to ensure it behaves more like a standard block element.
  // See https://github.com/twbs/bootstrap/issues/12359.
  min-width: 0;
}

legend {
  position relative
  display block
  width 100%
  padding 24px 0
  margin-bottom 32px
  font-size 1.6rem
  font-weight bold
  font-family font-family-alt
  line-height 1
  text-transform uppercase
  color legend-color
  border 0
  border-bottom 1px solid legend-border-color

  @media (min-width: screen-sm-min) {
    font-size 2.4rem
  }
  @media (min-width: screen-md-min) {
    border-bottom-color transparent
    font-size 1.8rem
    margin-bottom 10px
  }
}

label {
  display inline-block
  margin-bottom 10px
  font-weight 300
  font-size 1.4rem
  color #757575
}


// Normalize form controls
//
// While most of our form styles require extra classes, some basic normalization
// is required to ensure optimum display with or without those classes to better
// address browser inconsistencies.

// Override content-box in Normalize (* isn't specific enough)
input[type="search"] {
  box-sizing: border-box;
}

// Set the height of file controls to match text inputs
input[type="file"] {
  display: block;
}

// Make range inputs behave like textual form controls
input[type="range"] {
  display: block;
  width: 100%;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
  height: auto;
}

// Focus for file, radio, and checkbox
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  outline: 0;
}

// Adjust output element
output {
  display: block;
  padding-top: 10px;
  font-size: font-size-base;
  line-height: line-height-base;
  color: input-color;
}


// Common form controls
//
// Shared size and type resets for form controls. Apply `.form-control` to any
// of the following form controls:
//
// select
// textarea
// input[type="text"]
// input[type="password"]
// input[type="datetime"]
// input[type="datetime-local"]
// input[type="date"]
// input[type="month"]
// input[type="time"]
// input[type="week"]
// input[type="number"]
// input[type="email"]
// input[type="url"]
// input[type="search"]
// input[type="tel"]
// input[type="color"]

.form-control {
  display: block;
  width: 100%;
  height: 47px;
  padding: 11px 17px;
  font-size: 1.8rem;
  line-height: line-height-base;
  color: input-color;
  background-color: input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid input-border;
  border-radius: input-border-radius;

  @media (min-width: screen-md-min) {
    height: 36px;
    font-size: font-size-base;
    padding: 6px 12px;
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  &:focus {
    outline: 0;
  }

  // Placeholder
  placeholder();

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    cursor: cursor-disabled;
    background-color: input-bg-disabled;
    opacity: 1; // iOS fix for unreadable disabled content
  }

  // Reset height for `textarea`s
  textarea& {
    height: auto;
  }
}


// Search inputs in iOS
//
// This overrides the extra rounded corners on search inputs in iOS so that our
// `.form-control` class can properly style them. Note that this cannot simply
// be added to `.form-control` as it's not specific enough. For details, see
// https://github.com/twbs/bootstrap/issues/11586.

input[type="search"] {
  -webkit-appearance: none;
}


// Special styles for iOS temporal inputs
//
// In Mobile Safari, setting `display: block` on temporal inputs causes the
// text within the input to become vertically misaligned. As a workaround, we
// set a pixel line-height that matches the given height of the input, but only
// for Safari.

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  input[type="date"],
  input[type="time"],
  input[type="datetime-local"],
  input[type="month"] {
    line-height: input-height-base;
  }
  // input[type="date"].input-sm,
  // input[type="time"].input-sm,
  // input[type="datetime-local"].input-sm,
  // input[type="month"].input-sm {
  //   line-height: input-height-small;
  // }
  // input[type="date"].input-lg,
  // input[type="time"].input-lg,
  // input[type="datetime-local"].input-lg,
  // input[type="month"].input-lg {
  //   line-height: input-height-large;
  // }
}


// Form groups
//
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.

.form-group {
  margin-bottom: 12px;
}


// Checkboxes and radios
//
// Indent the labels to position radios/checkboxes as hanging controls.

.radio,
.checkbox {
  position relative
  display block
  margin-top 10px
  margin-bottom 10px

  label {
    min-height 38px
    line-height 19px
    padding-left 51px
    margin-bottom 0
    font-weight normal
    cursor pointer
    color #545454

    @media (min-width: screen-md-min) {
      min-height 23px
      line-height 23px
      padding-left 48px
    }
  }
}
.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
  position: absolute;
  margin-left: -51px;
  width 38px
  height 38px
  top 0
  opacity 0
  z-index 2

  @media (min-width: screen-md-min) {
    margin-left: -48px;
    width 23px
    height 23px
  }
}

.checkbox,
.checkbox-inline {
  .checkbox-replace {
    position absolute
    width 38px
    height 38px
    top 0
    left 0
    display block
    cursor pointer
    background url(../img/colored-checkbox-lg.png) no-repeat 0 0
  }

  input[type="checkbox"]:checked ~ .checkbox-replace {
    background-position 0 -38px
  }

  @media (min-width: screen-md-min) {
    .checkbox-replace {
      width 23px
      height 23px
      background-image url(../img/colored-checkbox.png)
    }
    input[type="checkbox"]:checked ~ .checkbox-replace {
      background-position 0 -23px
    }
  }
}

.radio + .radio,
.checkbox + .checkbox {
  margin-top: -5px; // Move up sibling radios or checkboxes for tighter spacing
}

// Radios and checkboxes on same line
.radio-inline,
.checkbox-inline {
  display: inline-block;
  padding-left: 32px;
  margin-bottom: 0;
  vertical-align: middle;
  font-weight: normal;
  cursor: pointer;

  &.is-rtl {
    padding-left 0
    padding-right 48px

    input[type="checkbox"] {
      right 0
      margin-left 0
    }
    .checkbox-replace {
      right 0
      left auto
    }

    @media (max-width: screen-sm-max) {
      label {
        font-size 1.6rem
        line-height 38px
        margin-bottom 0
      }
    }
    @media (min-width: screen-md-min) {
      padding-right 32px
    }
  }
}
.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
  margin-top: 0;
  margin-left: 10px; // space out consecutive inline controls
}

// Apply same disabled cursor tweak as for inputs
// Some special care is needed because <label>s don't inherit their parent's `cursor`.
//
// Note: Neither radios nor checkboxes can be readonly.
input[type="radio"],
input[type="checkbox"] {
  &[disabled],
  &.disabled,
  fieldset[disabled] & {
    cursor: cursor-disabled;
  }
}
// These classes are used directly on <label>s
.radio-inline,
.checkbox-inline {
  &.disabled,
  fieldset[disabled] & {
    cursor: cursor-disabled;
  }
}
// These classes are used on elements with <label> descendants
.radio,
.checkbox {
  &.disabled,
  fieldset[disabled] & {
    label {
      cursor: cursor-disabled;
    }
  }
}


// Form control sizing
//
// Build on `.form-control` with modifier classes to decrease or increase the
// height and font-size of form controls.

// .input-sm,
// .form-group-sm .form-control {
//   .input-size(@input-height-small; @padding-small-vertical; @padding-small-horizontal; @font-size-small; @line-height-small; @input-border-radius-small);
// }
//
// .input-lg,
// .form-group-lg .form-control {
//   .input-size(@input-height-large; @padding-large-vertical; @padding-large-horizontal; @font-size-large; @line-height-large; @input-border-radius-large);
// }


// Help text
//
// Apply to any element you wish to create light text for placement immediately
// below a form control. Use for general help, formatting, or instructional text.

.help-block {
  position relative
  display block
  margin 5px -30px 19px
  color text-color
  background-color #fff
  border 1px solid #d9d9d9
  padding 19px 0
  box-shadow 0 1px 6px rgba(0,0,0,.06)

  @media (min-width: screen-md-min) {
    border-radius 4px
    margin-left -30px
    margin-right -30px
  }
  @media (min-width: screen-lg-min) {
    margin-left -40px
    margin-right -40px
  }

  span {
    display block
    background-color brand-primary
    color #fff
    padding 16px 40px
    font-size 2rem
    line-height 1.2
    font-weight 300

    @media (min-width: screen-md-min) {
      font-size 1.6rem
    }
  }
}
